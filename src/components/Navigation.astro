---
import { getRelativeLocaleUrl } from "astro:i18n";
import "../styles/Navigation.css";
import CrossIcon from "./icons/CrossIcon.astro";
import HamburgerMenuIcon from "./icons/HamburgerMenuIcon.astro";

type Link = {
  href: string;
  label?: string;
  Icon?: (props: Record<string, any>) => any;
  extraProps?: Record<string, any>;
} & ({ label: string } | { Icon: (props: Record<string, any>) => any });

const origin = Astro.request.headers.get("Referer");

if (!origin) throw new Error("Something went wrong!");

const isEnglish = !origin.includes("/es/");
const pathname = origin
  .replace(Astro.request.headers.get("origin") ?? "http://localhost:4321", "")
  .replace("/es/", "/");
const links: Link[] = [
  {
    href: getRelativeLocaleUrl(Astro.currentLocale ?? "en"),
    label: isEnglish ? "Main Page" : "Inicio",
  },
  {
    href: getRelativeLocaleUrl(Astro.currentLocale ?? "en", "resume"),
    label: isEnglish ? "Resume" : "Curriculum",
  },
  {
    href: getRelativeLocaleUrl(Astro.currentLocale ?? "en", "posts"),
    label: "Posts",
  },
];
---

{
  isEnglish && (
    <div
      style="background-color:#e8e8e8;color:#1F3760;padding:1rem;font-weight: 900;display:flex;gap:20px;"
      id="language-change-prompt"
    >
      <p>¿Cambiar a español?</p>
      <a
        style="text-decoration:underline; color:#1F3760;"
        href={getRelativeLocaleUrl("es", pathname)}
      >
        Si
      </a>
      <button id="reject-language-change" style="text-decoration:underline;">
        No
      </button>
    </div>
  )
}
<nav>
  <button id="btn-open" class="nav-open" aria-expanded="false"
    ><HamburgerMenuIcon /></button
  >

  <div class="nav-overlay"></div>

  <div class="nav-content">
    <button id="btn-close" class="nav-close"><CrossIcon /></button>
    <ul class="nav-links">
      {
        links
          .filter(({ href }) => {
            const parsedHref = href.replace("/es/", "/");
            return pathname !== parsedHref;
          })
          .map(({ href, label, Icon, extraProps }) => (
            <li style="list-style: none !important;">
              <a href={href} style="font-weight:bolder;">
                {label && <p>{label}</p>}
                {Icon && <Icon {...extraProps} />}
              </a>
            </li>
          ))
      }
    </ul>
  </div>
</nav>
<script>
  const openBtn = document.querySelector("#btn-open") as HTMLElement;
  const closeBtn = document.querySelector("#btn-close") as HTMLElement;
  const media = window.matchMedia("(width < 768px)");
  const navContent = document.querySelector(".nav-content") as HTMLElement;
  const navOverlay = document.querySelector(".nav-overlay") as HTMLElement;

  const onMenuToggle = () => {
    const isExpanded =
      openBtn?.getAttribute("aria-expanded") === "true" || false;
    openBtn?.setAttribute("aria-expanded", String.raw`${!isExpanded}`);
    navContent.style.display = !isExpanded ? "block" : "";
    navOverlay.style.display = !isExpanded ? "block" : "";
  };

  const setupNav = (e: { matches: boolean }) => {
    if (e.matches) {
      openBtn.style.display = "block";
      openBtn?.setAttribute("aria-expanded", "false");
      navContent.style.display = "";
      navOverlay.style.display = "";
    } else {
      openBtn.style.display = "none";
      navContent.style.display = "flex";
      navOverlay.style.display = "none";
    }
  };

  setupNav(media);
  openBtn?.addEventListener("click", onMenuToggle);
  closeBtn?.addEventListener("click", onMenuToggle);
  navOverlay?.addEventListener("click", () => {
    openBtn?.setAttribute("aria-expanded", "false");
    navContent.style.display = "";
    navOverlay.style.display = "";
  });
  media.addEventListener("change", setupNav);

  const rejectLanguageChangeBtn = document.querySelector(
    "#reject-language-change"
  ) as HTMLElement;
  const languageChangePrompt = document.querySelector(
    "#language-change-prompt"
  ) as HTMLElement;

  const messageAlreadyDismissed =
    sessionStorage.getItem("languagePromptDismissed") === "true";

  if (messageAlreadyDismissed && languageChangePrompt)
    languageChangePrompt.style.display = "none";

  rejectLanguageChangeBtn?.addEventListener("click", () => {
    sessionStorage.setItem("languagePromptDismissed", "true");
    if (languageChangePrompt) languageChangePrompt.style.display = "none";
  });
</script>
