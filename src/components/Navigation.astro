---
import "../styles/Navigation.css";
import CrossIcon from "./icons/CrossIcon.astro";
import HamburgerMenuIcon from "./icons/HamburgerMenuIcon.astro";

type Link = {
  href: string;
  label?: string;
  Icon?: (props: Record<string, any>) => any;
  extraProps?: Record<string, any>;
} & ({ label: string } | { Icon: (props: Record<string, any>) => any });

const links: Link[] = [
  { href: "/work", label: "Work" },
  { href: "/about", label: "About" },
  { href: "/contact", label: "Contact" },
];
const pushedLinks: Link[] = [
  /* {
    href: "https://www.linkedin.com/in/brian-gonzalez-a96a38359/",
    Icon: LinkedInIcon,
  },
  { href: "mailto:briandedgonzalez@gmail.com", Icon: EmailIcon },
  {
    href: "https://github.com/bddGonzalez",
    Icon: GithubIcon,
    extraProps: { width: 40, height: 40 },
  }, */
];
---

<nav>
  <button id="btn-open" class="nav-open" aria-expanded="false"
    ><HamburgerMenuIcon /></button
  >

  <div class="nav-overlay"></div>

  <div class="nav-content">
    <button id="btn-close" class="nav-close"><CrossIcon /></button>
    <ul class="nav-links">
      {
        links.map(({ href, label, Icon, extraProps }) => (
          <li>
            <a href={href} style="font-weight:bolder;">
              {label && <p>{label}</p>}
              {Icon && <Icon {...extraProps} />}
            </a>
          </li>
        ))
      }
      <div class="pushed-links">
        {
          pushedLinks.map(({ href, label, Icon, extraProps }) => (
            <li>
              <a href={href} style="font-weight:bolder;" target="_blank">
                {label && <p>{label}</p>}
                {Icon && <Icon {...extraProps} />}
              </a>
            </li>
          ))
        }
      </div>
    </ul>
  </div>
</nav>
<script>
  const openBtn = document.querySelector("#btn-open") as HTMLElement;
  const closeBtn = document.querySelector("#btn-close") as HTMLElement;
  const media = window.matchMedia("(width < 768px)");
  const navContent = document.querySelector(".nav-content") as HTMLElement;
  const navOverlay = document.querySelector(".nav-overlay") as HTMLElement;

  const onMenuToggle = () => {
    const isExpanded =
      openBtn?.getAttribute("aria-expanded") === "true" || false;
    openBtn?.setAttribute("aria-expanded", String.raw`${!isExpanded}`);
    navContent.style.display = !isExpanded ? "block" : "";
    navOverlay.style.display = !isExpanded ? "block" : "";
  };

  const setupNav = (e: { matches: boolean }) => {
    if (e.matches) {
      openBtn.style.display = "block";
      openBtn?.setAttribute("aria-expanded", "false");
      navContent.style.display = "";
      navOverlay.style.display = "";
    } else {
      openBtn.style.display = "none";
      navContent.style.display = "flex";
      navOverlay.style.display = "none";
    }
  };

  setupNav(media);
  openBtn?.addEventListener("click", onMenuToggle);
  closeBtn?.addEventListener("click", onMenuToggle);
  navOverlay?.addEventListener("click", () => {
    openBtn?.setAttribute("aria-expanded", "false");
    navContent.style.display = "";
    navOverlay.style.display = "";
  });
  media.addEventListener("change", setupNav);
</script>
